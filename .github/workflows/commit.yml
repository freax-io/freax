name: Commit workflow
on:
  push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: node_modules

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint
        run: npm run lint

  release-please:
    name: Release Please
    needs: lint
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      paths_released: ${{ steps.release.outputs.paths_released }}
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
          # optional. customize path to release-please-config.json
          config-file: release-please-config.json
          # optional. customize path to .release-please-manifest.json
          manifest-file: .release-please-manifest.json

  publish-core:
    if: contains(needs.release-please.outputs.paths_released, 'packages/core')
    name: Publish @freax/core to NPM
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: node_modules

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build @freax/core
        run: npm run build:core

      - uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.FREAX_NPM_PUBLISH_CLASSIC_TOKEN  }}
          package: packages/core
          access: public

  publish-ui:
    if: contains(needs.release-please.outputs.paths_released, 'packages/ui')
    name: Publish @freax/ui to NPM
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: node_modules

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build @freax/ui
        run: npm run build:packages

      - uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.FREAX_NPM_PUBLISH_CLASSIC_TOKEN  }}
          package: packages/ui
          access: public

  publish-tsconfig:
    if: contains(needs.release-please.outputs.paths_released, 'config/tsconfig')
    name: Publish @freax/tsconfig to NPM
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: node_modules

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.FREAX_NPM_PUBLISH_CLASSIC_TOKEN  }}
          package: config/tsconfig
          access: public